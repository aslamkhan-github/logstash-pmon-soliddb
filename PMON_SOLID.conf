input {
  
  file {
     path => '/root/pmon/*'
     start_position  => "beginning"
     sincedb_path  => "/dev/null"
    }
}


filter {
   if [message] =~ /^TimeMs/ {             
   drop {}           
   } 
   csv {
    separator => ","
   # skip_empty_columns => true
    columns => ["TimeMs","Time","File open","File read","File write","File append","File flush","File lock","Cache find","Cache read","Cache write","Cache prefetch","Cache prefetch wait","Cache preflush","Cache LRU write","Cache slot wait","Cache slot replace","Cache write storage leaf","Cache write storage index","Cache write bonsai leaf","Cache write bonsai index","Cache preflush bytes","Cache preflush flush","RPC messages","RPC read","RPC write","RPC uncompressed","RPC compressed","RPC connected","RPC disconnected","Com sel empty","Com sel found","SQL prepare","SQL execute","SQL execute simple","SQL execute complex","SQL fetch","DBE insert","DBE delete","DBE update","DBE fetch","DBE fetch M-table","DBE fetch D-table","DBE dd operation","Proc compile","Proc exec","Proc SQL prepare","Proc SQL execute","Proc SQL fetch","Trig compile","Trig exec","Trig SQL prepare","Trig SQL execute","Trig SQL fetch","SA insert","SA delete","SA update","SA fetch","Trans commit","Trans abort","Trans rollback","Trans readonly","Trans buf","Trans buf cleanup","Trans buf added","Trans buf removed","Trans validate","Trans active","Trans read level","Ind write","Ind nomrg write","Search active","Search replan","Db size","Db free size","Mem size","Merge quickstep","Merge step","Merge step (purge)","Merge step (user)","Merge oper","Merge cleanup","Merge active","Merge nomrg write","Merge file write","Merge file read","Merge level","Backup step","Backup active","Checkpoint active","Checkpoint count","Checkpoint file write","Checkpoint file read","Est read samples","Sorter start sort","Sorter add row","Sorter fetch row","Sorter open file","Sorter activecnt","Sorter waitcnt","Sorter wait","Sorter filecnt","Sorter memblockcnt","Sorter failed","Sync repl msg forw","Sync repl msg getr","Sync repl msg exec","Sync mast msg read","Sync mast msg exec","Sync mast msg write","Sync mast subs","Log write","Log file write","Log file write bytes","Log nocp write","Log size","Log flush (L)","Log flush (P)","Log grpcommwkup","Log flush full","Log wait flush","Log writeq full rec","Log writeq full byt","Log writeq records","Log writeq bytes","Log writeq pending bytes","Log availq items","Log writeq add","Log writeq write","Log writeq item count","HSB operation count","HSB commit count","HSB packet count","HSB flush count","HSB cached bytes","HSB cached ops","HSB flusher bytes","HSB notsent bytes","HSB grouped acks","HSB state","HSB wait cpmes","HSB secondary queues","HSB log reqcount","HSB log waitct","HSB log freespc","HSB catchup reqcnt","HSB catchup waitcnt","HSB catchup freespc","HSB alone freespc","Tabcur create","Tabcur reset full","Tabcur reset smpl","Tabcur estimate","Tabcur table scan","Tabcur index access","Thread count","Trans wait readlvl","Lock ok","Lock timeout","Lock deadlock","Lock deadlock check","Lock deadlock loop","Lock wait","Lock count","Dropped search buffers","Number of search buffers","NOCHECK operations","MME cur num of locks","MME max num of locks","MME cur num of lock chains","MME max num of lock chains","MME longest lock chain path","MME mem used by tuples","MME mem used by indexes","MME mem used by page structs","MME page splits","MME page joins","MME unnec mutexed searches","MME nonmatched (RO)","MME nonmatched (EXCL)","MME inserts with x gate","MME deletes with x gate","MME hotspot protection","MME index key inserts","MME index key deletes","MME bnode resizes","MME vtrie mutex collisions","MME vtrie version colls","MME vtrie vertical splits","MME vtrie new branches","MME vtrie vertical joins","MME vtrie branch deletes","MME vtrie insert retries","MME vtrie delete retries","MME bnode mutex collisions","MME bnode version colls","MME ffmem privctx init","MME ffmem privctx done","Posted events queue","Index search both","Index search storage","B-tree node search keys","B-tree node search mismatch","B-tree node build mismatch","B-tree node split","B-tree node relocate","B-tree node delete empty","B-tree node exclusive","B-tree key read","B-tree key read delete","B-tree key read oldversion","B-tree key read abort","B-tree storage leaf len","B-tree storage index len","B-tree bonsai leaf len","B-tree bonsai index len","Bonsai-tree height","B-tree lock node","B-tree lock tree","B-tree lock full path","B-tree lock partial path","B-tree get no lock","B-tree get shared lock","Pessimistic gate wait","Merge gate wait","Storage gate wait","Bonsai gate wait","Action gate wait","MME pages gate wait","MME index gate wait","Gate wait","Logreader spm reqcount","Logreader spm waitct","Logreader spm freespc min","Logreader spm freespc max","Logreader logdata queue len","Logreader record queue len","Logreader stmt queue len","Logreader open cursors","Logreader records processed","Logreader records sent","Logreader commits processed","Logreader commits sent","Logreader messages sent","Logreader catchup state","Logreader catchup queue len","Logreader catchup queue size","Logreader pending queue len","Logreader memcache queue len","Logreader batch queue len","Logreader flush batch full","Logreader flush batch force","TS applied transactions","Passthrough open connections","Passthrough open statements","Passthrough reads","Passthrough non reads","Passthrough commits","Passthrough rollbacks","Passthrough result cnv","Passthrough param cnv","Passthrough failures","Passthrough reprepare","Passthrough complex by num non indexed constraints","Passthrough complex by num ordered rows","Passthrough complex by num tables","XA trans start","XA trans end","XA trans resume","XA trans prepare","XA trans commit","XA trans rollback","XA trans forget","XA trans recover","XA trans active","SMA connection count","SMA shared memory used","DB actiongate lock time latest","DB actiongate lock time sum","DB actiongate lock count","Time sec"]
   }
   
   grok {
       match => { "message" => "%{NUMBER:TimeMs:integer},%{TIMESTAMP_ISO8601:time:logdate},%{DATA:file_open:Float},%{DATA:file_read:Float},%{DATA:file_write:Float},%{DATA:file_append:Float},%{DATA:file_flush:Float},%{DATA:file_lock:Float},%{DATA:cache_find:Float},%{DATA:cache_read:Float},%{DATA:cache_write:Float},%{DATA:cache_prefetch:Float},%{DATA:cache_prefetch_wait:Float},%{DATA:cache_preflush:Float},%{DATA:cache_preflush_LRU_write:Float},%{DATA:cache_slot_wait:Float},%{DATA:cache_slot_replace:Float},%{DATA:cache_write_storage_leaf:Float},%{DATA:cache_write_storage_index:Float},%{DATA:cache_write_bonsai_leaf:Float},%{DATA:cache_write_bonsai_index:Float},%{NUMBER:cache_preflush_bytes:integer},%{DATA:cache_preflush_flush:Float},%{DATA:RPC_message:Float},%{DATA:RPC_read:Float},%{DATA:RPC_Write:Float},%{DATA:RPC_Compressed:Float},%{DATA:RPC_Connected:Float},%{DATA:RPC_Disconnected:Float},%{DATA:Com_Sel_empty:Float},%{DATA:Com_Sel_found:Float},%{DATA:SQL_Prepare:Float},%{DATA:SQL_Execute:Float},%{DATA:SQL_Execute_Simple:Float},%{DATA:SQL_Execute_Complex:Float},%{DATA:SQL_fetch:Float},%{DATA:DBE_Insert:Float},%{DATA:DBE_Delete:Float},%{DATA:DBE_Update:Float},%{DATA:DBE_Fetch:Float},%{DATA:DBE_Fetch_M-Table:Float},%{DATA:DBE_Fetch_D-Table:Float},%{DATA:DBE_DD_Operation:Float},%{DATA:Proc_Compile:Float},%{DATA:Proc_Exec:Float},%{DATA:Proc_SQL_Prepare:Float},%{DATA:Proc_SQL_Execute:Float},%{DATA:Proc_SQL_Fetch:Float},%{DATA:Trig_Compile:Float},%{DATA:Trig_Exec:Float},%{DATA:Trig_SQL_Prepare:Float},%{DATA:Trig_SQL_Execute:Float},%{DATA:Trig_SQL_Fetch:Float},%{DATA:SA_Insert:Float},%{DATA:SA_Delete:Float},%{DATA:SA_Update:Float},%{DATA:SA_Fetch:Float},%{DATA:Trans_Commit:Float},%{DATA:Trans_Abort:Float},%{DATA:Trans_rollback:Float},%{DATA:Trans_readonly:Float},%{DATA:Trans_buf:Float},%{DATA:Trans_buf_cleanup:Float},%{DATA:Trans_buf_added:Float},%{DATA:Trans_buf_removed:Float},%{DATA:Trans_Validate:Float},%{DATA:Trans_Active:Float},%{DATA:Trans_read_level:Float},%{DATA:Ind_write:Float},%{DATA:Ind_nomrg_write:Float},%{DATA:Search_Active:Float},%{DATA:Search_replan:Float},%{NUMBER:DB_Size:integer},%{NUMBER:DB_Free_Size:integer},%{NUMBER:MEM_Size:integer},%{NUMBER:Merge_quickstep:integer},%{DATA:Merge_step:Float},%{DATA:Merge_step_Purge:Float},%{DATA:Merge_step_User:Float},%{DATA:Merge_oper:Float},%{DATA:Merge_cleanup:Float},%{DATA:Merge_active:Float},%{DATA:Merge_normrg_write:Float},%{DATA:Merge_file_write:Float},%{DATA:Merge_file_read:Float},%{DATA:Merge_level:Float},%{NUMBER:Backup_Step:integer},%{DATA:Backup_Active:Float},%{DATA:Checkpoint_Active:Float},%{NUMBER:Checkpoint_count:integer},%{NUMBER:Checkpoint_File_Write:integer},%{DATA:Checkpoint_File_read:Float},%{DATA:Est_Read_Samples:Float},%{DATA:Sorter_Start_Sort:Float},%{DATA:Sorter_Add_row:Float},%{DATA:Sorter_fetch_row:Float},%{DATA:Sorter_open_file:Float},%{DATA:Sorter_activecnt:Float},%{DATA:Sorter_waitcnt:Float},%{DATA:Sorter_wait:Float},%{DATA:Sorter_Filecnt:Float},%{DATA:Sorter_Memblockcnt:Float},%{DATA:Sorter_Failed:Float},%{DATA:Sync_repl_msg_forw:Float},%{DATA:Sync_repl_msg_getr:Float},%{DATA:Sync_repl_msg_exec:Float},%{DATA:Sync_mast_msg_read:Float},%{DATA:Sync_mast_msg_exec:Float},%{DATA:Sync_mast_msg_write:Float},%{DATA:Sync_mast_subs:Float},%{DATA:Log_write:Float},%{DATA:Log_file_write:Float},%{NUMBER:Log_file_write_bytes:integer},%{DATA:Log_nocp_write:Float},%{NUMBER:Log_Size:integer},%{NUMBER:Log_Flush_L:integer},%{DATA:Log_Flush_P:Float},%{DATA:Log_grpcommwkup:Float},%{DATA:Log_Flush_Full:Float},%{DATA:Log_wait_flush:Float},%{DATA:Log_writeq_full_req:Float},%{DATA:Log_writeq_full_byt:Float},%{DATA:Log_writeq_records:Float},%{NUMBER:Log_writeq_bytes:integer},%{NUMBER:Log_writeq_pending_bytes:integer},%{NUMBER:Log_Availq_items:integer},%{NUMBER:Log_writeq_add:integer},%{DATA:Log_writeq_write:Float},%{NUMBER:Log_writeq_item_count:integer},%{NUMBER:HSB_Operation_Count:integer},%{NUMBER:HSB_commit_Count:integer},%{NUMBER:HSB_Packet_Count:integer},%{NUMBER:HSB_flush_Count:integer},%{NUMBER:HSB_Cache_Bytes:integer},%{DATA:HSB_Cache_Ops:Float},%{NUMBER:HSB_Flusher_Bytes:integer},%{NUMBER:HSB_notsent_Bytes:integer},%{DATA:HSB_Grouped_Acks:Float},%{DATA:HSB_State:Float},%{DATA:HSB_Wait_cpmes:Float},%{DATA:HSB_Secondary_Queues:Float},%{DATA:HSB_log_reqcount:Float},%{DATA:HSB_log_Waitctl:Float},%{DATA:HSB_log_freespc:Float},%{DATA:HSB_Catchup_reqcnt:Float},%{DATA:HSB_catchup_Waitcnt:Float},%{DATA:HSB_catchup_freespc:Float},%{DATA:HSB_Alone_freespc:Float},%{DATA:Tabcur_create:Float},%{DATA:Tabcur_reset_full:Float},%{DATA:Tabcur_reset_smpl:Float},%{DATA:Tabcur_estimate:Float},%{DATA:Tabcur_table_Scan:Float},%{DATA:Tabcur_Index_Access:Float},%{NUMBER:Thread_count:integer},%{DATA:Trans_Wait_readlvl:Float},%{DATA:Lock_OK:Float},%{DATA:Lock_Timeout:Float},%{DATA:Lock_deadlock_check:Float},%{DATA:Lock_deadlock_loop:Float},%{DATA:Lock_Wait:Float},%{NUMBER:Lock_count:integer},%{DATA:Dropped_search_buffers:Float},%{DATA:Number_of_search_buffers:Float},%{DATA:NOCHECK_Operations:Float},%{DATA:MME_cur_num_of_locks:Float},%{DATA:MME_max_num_of_locks:Float},%{DATA:MME_cur_num_of_locks_chains:Float},%{DATA:MME_max_num_of_locks_chains:Float},%{DATA:MME_longest_lock_chain_path:Float},%{DATA:MME_mem_used_by_tupples:Float},%{DATA:MME_mem_used_by_indexes:Float},%{DATA:MME_mem_used_by_page_structs:Float},%{DATA:MME_page_splits:Float},%{DATA:MME_page_joins:Float},%{DATA:MME_unnec_mutexed_searches:Float},%{DATA:MME_nomatched_RO:Float},%{DATA:MME_nomatched_EXCL:Float},%{DATA:MME_inserts_with_X_gate:Float},%{DATA:MME_deletes_with_X_gate:Float},%{DATA:MME_hotspot_protection:Float},%{DATA:MME_index_key_inserts:Float},%{DATA:MME_index_key_deletes:Float},%{DATA:MME_bnode resizes:Float},%{DATA:MME_vtrie_mutex_collisions:Float},%{DATA:MME_vtrie_version_colls:Float},%{DATA:MME_vtrie_vertical_splits:Float},%{DATA:MME_vtrie_new_branches:Float},%{DATA:MME_vtrie_vertical_joins:Float},%{DATA:MME_vtrie_branch_deletes:Float},%{DATA:MME_vtrie_insert_retries:Float},%{DATA:MME_vtrie_deletes_retries:Float},%{DATA:MME_bnode_mutex_collisions:Float},%{DATA:MME_bnode_version_colls:Float},%{DATA:MME_vtrie_ffmem_privctx_init:Float},%{DATA:MME_vtrie_ffmem_privctx_done:Float},%{DATA:posted_events_queue:Float},%{DATA:Index_Search_Both:Float},%{NUMBER:Index_Search_Storage:integer},%{DATA:B_tree_node_search_keys:Float},%{DATA:B_tree_node_search_mismatch:Float},%{DATA:B_tree_node_build_mismatch:Float},%{DATA:B_tree_node_split:Float},%{DATA:B_tree_node_relocate:Float},%{DATA:B_tree_node_delete_empty:Float},%{DATA:B_tree_node_exclusive:Float},%{DATA:B_tree_key_read:Float},%{DATA:B_tree_key_read_delete:Float},%{DATA:B_tree_key_read_oldversion:Float},%{DATA:B_tree_key_read_abort:Float},%{DATA:B_tree_Storage_leaf_len:Float},%{DATA:B_tree_Storage_index_len:Float},%{DATA:B_tree_Bonsai_leaf_len:Float},%{DATA:B_tree_Bonsai_index_len:Float},%{DATA:Bonsai-tree_hight:Float},%{DATA:B_tree_lock_node:Float},%{DATA:B_tree_lock_tree:Float},%{DATA:B_tree_lock_full_path:Float},%{DATA:B_tree_lock_partial_path:Float},%{DATA:B_tree_get_no_lock:Float},%{DATA:B_tree_get_shared_lock:Float},%{DATA:Pessimistic_gate_Wait:Float},%{DATA:Merge_gate_Wait:Float},%{DATA:Storage_gate_Wait:Float},%{DATA:Bonsai_gate_Wait:Float},%{DATA:Action_gate_Wait:Float},%{DATA:MME_Pages_gate_Wait:Float},%{DATA:MME_Index_gate_Wait:Float},%{DATA:Gate_Wait:Float},%{DATA:Logreader_spm_reqcount:Float},%{DATA:Logreader_spm_waitct:Float},%{DATA:Logreader_spm_freespc_min:Float},%{DATA:Logreader_spm_freespc_max:Float},%{DATA:Logreader_logdata_queue_len:Float},%{DATA:Logreader_record_queue_len:Float},%{DATA:Logreader_stmt_queue_len:Float},%{DATA:Logreader_open_cursors:Float},%{DATA:Logreader_records_processed:Float},%{DATA:Logreader_records_sent:Float},%{DATA:Logreader_commits_processed:Float},%{DATA:Logreader_commits_sent:Float},%{DATA:Logreader_messages_sent:Float},%{DATA:Logreader_catchup_state:Float},%{DATA:Logreader_catchup_queue_len:Float},%{DATA:Logreader_catchup_queue_size:Float},%{DATA:Logreader_pending_queue_len:Float},%{DATA:Logreader_memcache_queue_len:Float},%{DATA:Logreader_batch_queue_len:Float},%{DATA:Logreader_flush_batch_full:Float},%{DATA:Logreader_flush_batch_force:Float},%{DATA:TS_Applied_Transacsions:Float},%{DATA:Passthrough_open_connections:Float},%{DATA:Passthrough_open_statements:Float},%{DATA:Passthrough_reads:Float},%{DATA:Passthrough_non_reads:Float},%{DATA:Passthrough_commits:Float},%{DATA:Passthrough_rollbacks:Float},%{DATA:Passthrough_result_cnv:Float},%{DATA:Passthrough_param_cnv:Float},%{DATA:Passthrough_fialure:Float},%{DATA:Passthrough_reprepare:Float},%{DATA:Passthrough_complex_by_num_non_indexed_constraints:Float},%{DATA:Passthrough_complex_by_num_ordered_rows:Float},%{DATA:Passthrough_complex_by_num_tables:Float},%{DATA:XA_trans_start:Float},%{DATA:XA_trans_end:Float},%{DATA:XA_trans_resume:Float},%{DATA:XA_trans_prepare:Float},%{DATA:XA_trans_commit:Float},%{DATA:XA_trans_rollback:Float},%{DATA:XA_trans_forget:Float},%{DATA:XA_trans_recover:Float},%{DATA:XA_trans_active:Float},%{NUMBER:SMA_Connection_Count:integer},%{DATA:SMA_Shared_memory_used:Float},%{DATA:DB_Actiongate_lock_time_latest:Float},%{DATA:DB_Actiongate_lock_time_sum:Float},%{NUMBER:DB_Actiongate_lock_count:integer},%{NUMBER:Time_Sec:integer}"
        }
     }  

  # If the date can't get parsed, I don't want it in my elastic search, so I just drop it.
    if "_dateparsefailure" in [tags] {
    drop{ }
   }
 
  # drop message lines:
   mutate { 
     remove_field => [ "message", "Time_MS", "file_open", "file_read", "file_write", "file_append", "file_flush", "file_lock", "cache_find", "cache_read", "cache_write", "cache_prefetch", "cache_prefetch_wait", "cache_preflush", "cache_preflush_LRU_write", "cache_slot_wait", "cache_slot_replace", "cache_write_storage_leaf", "cache_write_storage_index", "cache_write_bonsai_leaf", "cache_write_bonsai_index", "cache_preflush_flush", "RPC_Compressed", "RPC_Connected", "RPC_Disconnected", "Com_Sel_empty", "Com_Sel_found", "SQL_Prepare", "DBE_Delete", "DBE_Update", "DBE_DD_Operation", "Proc_Exec", "Proc_SQL_Prepare", "Proc_SQL_Execute", "Proc_SQL_Fetch", "Trig_Compile", "Trig_Exec", "Trig_SQL_Prepare", "Trig_SQL_Execute", "Trig_SQL_Fetch", "SA_Insert", "SA_Delete", "SA_Update", "SA_Fetch", "Trans_Commit", "Trans_rollback", "Trans_readonly", "Trans_Active", "Ind_nomrg_write", "Search_Active", "Search_replan", "Merge_step", "Merge_step_Purge", "Merge_step_User", "Merge_oper", "Merge_cleanup", "Merge_active", "Merge_normrg_write", "Merge_file_write", "Merge_file_read", "Merge_level", "Backup_Active", "Checkpoint_Active", "Checkpoint_count", "Checkpoint_File_read", "Est_Read_Samples", "Sort_Start_Sort", "Sorter_Add_row", "Sorter_fetch_row", "Sorter_open_file", "Sorter_activecnt", "Sorter_waitcnt", "Sorter_wait", "Sorter_Filecnt", "Sorter_Memblockcnt", "Sorter_Failed", "Sync_repl_msg_forw", "Sync_repl_msg_getr", "Sync_repl_msg_exec", "Sync_mast_msg_read", "Sync_mast_msg_exec", "Sync_mast_msg_write", "Sync_mast_subs", "Log_write", "Log_file_write_bytes", "Log_nocp_write", "Log_Flush_P", "Log_grpcommwkup", "Log_wait_flush", "Log_writeq_full_byt", "Log_writeq_records", "HSB_Grouped_Acks", "HSB_State", "HSB_Secondary_Queues", "HSB_log_freespc", "HSB_catchup_Waitcnt", "HSB_catchup_freespc", "Tabcur_create", "Tabcur_reset_smpl", "Tabcur_Index_Access", "Lock_OK", "Lock_deadlock_check", "Lock_deadlock_loop", "Lock_Wait", "Lock_count", "Dropped_search_buffers", "Number_of_search_buffers", "NOCHECK_Operations", "MME_max_num_of_locks", "MME_cur_num_of_locks_chains", "MME_longest_lock_chain_path", "MME_index_key_inserts", "MME_vtrie_version_colls", "Index_Search_Both", "B_tree_node_search_keys", "B_tree_node_search_mismatch", "B_tree_node_build_mismatch", "B_tree_node_split", "B_tree_node_relocate", "B_tree_node_delete_empty", "B_tree_node_exclusive", "B_tree_key_read", "B_tree_key_read_delete", "B_tree_key_read_oldversion", "B_tree_key_read_abort", "B_tree_Storage_leaf_len", "B_tree_Storage_index_len", "B_tree_lock_full_path", "B_tree_lock_partial_path", "B_tree_get_no_lock", "B_tree_get_shared_lock", "Pessimistic_gate_Wait", "Merge_gate_Wait", "Storage_gate_Wait", "Bonsai_gate_Wait", "Action_gate_Wait", "MME_Pages_gate_Wait", "MME_Index_gate_Wait", "Gate_Wait", "Logreader_spm_waitct", "Logreader_spm_freespc_min", "Logreader_spm_freespc_max", "Logreader_logdata_queue_len", "Logreader_record_queue_len", "Logreader_stmt_queue_len", "Logreader_open_cursors", "Logreader_records_processed", "Logreader_records_sent", "Logreader_commits_processed", "Logreader_commits_sent", "Logreader_messages_sent", "Logreader_catchup_state", "Logreader_catchup_queue_len", "Logreader_catchup_queue_size", "TS_Applied_Transacsions", "Passthrough_open_statements", "XA_trans_resume", "XA_trans_prepare", "XA_trans_commit", "XA_trans_rollback", "XA_trans_forget", "XA_trans_recover", "XA_trans_active", "SMA_Connection_Count" ] 
   }
   
   date {
   match => [ "event_timestamp", "ISO8601" ]
   target => "@timestamp"
   }
   date {
   match => ["time","YYYY-mm-dd HH:mm:ss"]
   target => ["@timestamp"]
   remove_field => ["time"]
  #timezone => "UTC"
   } 
}


output {
  stdout {
     codec => rubydebug
  }
  elasticsearch {
    hosts => [ "localhost:9200" ]
    index => "nmon_soliddb-%{+YYYY.MM.dd}"
    document_type => "default"
    http_compression => true
  }
}
                       

